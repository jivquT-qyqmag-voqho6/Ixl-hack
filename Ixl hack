javascript:;%20A%20maphack%20for%20Warcraft%203%201.24d.%20WC3%20sets%20the%20visibility%20of%20the%20map%20every%20frame%20via%20a%20call%20to%20memset%20that%20;%20looks%20likememset%3E%20%20%20%20%20%20%20%20;%20;%20By%20changing%20the%20push%200%20instruction%20to%20push%200fh,%20we%20reveal%20all%20the%20squares%20on%20the%20map.%20This%20method%20will%20;%20cause%20a%20desync%20in%20multiplayer%20games.%20%20%20%20%20%20%20%20;%20;%20Originally%20written%202010/02/16%20by%20attilathedud.%20%20;%20System%20descriptors%20.386%20.model%20flat,stdcall%20option%20casemap:none%20%20include%20%5Cmasm32%5Cinclude%5Ckernel32.inc%20include%20%5Cmasm32%5Cinclude%5Cuser32.inc%20includelib%20%5Cmasm32%5Clib%5Ckernel32.lib%20includelib%20%5Cmasm32%5Clib%5Cuser32.lib%20%20.data%20%09dllname%20db%20%22Game.dll%22%20%09toggle%20db%200%20%09on%20db%20%22Maphack%20on%22,0%20%09off%20db%20%22Maphack%20off%22,0%20%09%20.data?%20%09hookbase%20dd%20?%20%09ori_chat_out%20dd%20?%20%09ori_map_draw%20dd%20?%20%09ori_globalWC3class%20dd%20?%09%09%20%09%20.code%20%09main:%20%09%09;%20Save%20the%20base%20pointer%20and%20load%20in%20the%20stack%20pointer%20%09%09push%20ebp%20%09%09mov%20ebp,esp%20%20%09%09;%20Check%20to%20see%20if%20the%20dll%20is%20being%20loaded%20validly.%20%09%09mov%20eax,dword%20ptr%20ss:%5Bebp+0ch%5D%20%09%09cmp%20eax,1%20%09%09jnz%20@returnf%20%20%09%09;%20Save%20eax%20on%20the%20stack%20for%20restoring%20after%20we%20create%20our%20thread.%20%09%09push%20eax%20%20%09%09;%20All%20of%20our%20functions%20reside%20in%20Game.dll%20which%20is%20dynamically%20loaded.%20Because%20of%20this,%20we%20%09%09;%20have%20to%20get%20the%20base%20address%20of%20it%20and%20then%20add%20the%20offsets%20of%20the%20functions%20we%20need.%20%09%09lea%20eax,dllname%20%09%09push%20eax%20%09%09call%20GetModuleHandle%20%20%20%09%09;%20Load%20our%20functions%20with%20their%20values.%20Note%20that%20eax%20is%20adjusted%20with%20each%20add,%20i.e.%20%09%09;%20hookbase's%20offset%20is%2040b444h.%20%09%09add%20eax,2fbf60h%20%09%09mov%20ori_chat_out,eax%20%09%09add%20eax,10f4e4h%20%09%09mov%20hookbase,eax%20%09%09add%20eax,5h%20%09%09mov%20ori_map_draw,eax%20%09%09add%20eax,6c098fh%20%09%09mov%20ori_globalWC3class,eax%20%20%09%09;%20Allocate%20a%20section%20of%20memory%20to%20hold%20the%20old%20protection%20type%20for%20when%20we%20unprotect%20code.%20%09%09;%20Store%20this%20memory%20in%20ebx.%20%09%09push%2040h%20%09%09push%201000h%20%09%09push%204h%20%09%09push%200%20%09%09call%20VirtualAlloc%20%09%20%09%09mov%20ebx,eax%20%20%09%09;%20Unprotect%20the%20code%20that%20we%20intend%20to%20modify%20so%20that%20we%20can%20make%20changes%20to%20it.%20%09%09push%20ebx%20%09%09push%2040h%20%09%09push%205h%20%09%09push%20hookbase%20%09%09call%20VirtualProtect%20%20%09%09;%20Before%20the%20call%20to%20memset,%20create%20a%20codecave%20that%20will%20jmp%20to%20our%20hook%20function.%20%09%09;%20e9h%20is%20the%20opcode%20to%20jmp,%20with%20the%20address%20of%20the%20jump%20being%20calculated%20by%20subtracting%20%09%09;%20the%20address%20of%20the%20function%20to%20jump%20to%20from%20our%20current%20location.%20%09%09mov%20eax,hookbase%20%09%09mov%20byte%20ptr%20ds:%5Beax%5D,0e9h%20%09%09lea%20ecx,@hook%20%09%09sub%20ecx,ori_map_draw%20%09%09mov%20dword%20ptr%20ds:%5Beax+1%5D,ecx%20%20%09%09;%20Reprotect%20the%20code%20we%20just%20modified.%20%09%09push%20ebx%20%09%09push%2040h%20%09%09push%205h%20%09%09push%20hookbase%20%09%09call%20VirtualProtect%20%20%20%09%09;%20Free%20the%20memory%20we%20allocated%20to%20hold%20the%20protection%20type.%20%09%09push%204000h%20%09%09push%204h%20%09%09push%20ebx%20%09%09call%20VirtualFree%20%20%20%09%09;%20Create%20a%20thread%20that%20will%20check%20for%20us%20pressing%20a%20hotkey%20%09%09push%200%20%09%09push%200%20%09%09push%200%20%09%09push%20@hotkey%20%09%09push%200%20%09%09push%200%20%09%09call%20CreateThread%20%20%20%09%09;%20Restore%20the%20stack%20and%20exit%20dllmain%20%09%09pop%20eax%20%09%09@returnf:%20%09%09%09leave%20%09%09%09retn%200ch%20%09%09%09%20%09%09%20%09%09;%20The%20hotkey%20thread%20will%20scan%20for%20F5%20being%20pressed%20and%20then%20checks%206fae54d3h%20to%20see%20if%20%09%09;%20we%20are%20currently%20in%20a%20game%20or%20not.%20The%20value%20of%20toggle%20is%20switched%20between%200%20and%200fh.%20%09%09;%20Depending%20on%20the%20value%20of%20toggle,%20the%20chat%20out%20function%20is%20called%20with%20either%20an%20on%20or%20off%20%09%09;%20value.%20%09%09;%20%09%09;%20@@%20sets%20up%20a%20temporary%20label.%20@B%20jumps%20back%20to%20the%20last%20defined%20temporary%20label.%20%20%09%09@hotkey:%20%09%09%09@@:%20%09%09%09%09push%2074h%20%09%09%09%09call%20GetAsyncKeyState%20%20%09%09%09%09and%20eax,1%20%09%09%09%09test%20eax,eax%20%09%09%09%09jz%20@b%20%09%09%09%09cmp%20dword%20ptr%20ds:%5B6fae54d3h%5D,09h%20%09%09%09%09jl%20@b%20%09%09%09%09cmp%20toggle,0%20%09%09%09%09jnz%20@toggle_off%20%09%09%09%09mov%20toggle,0fh%20%09%09%09%09lea%20edx,on%20%09%09%09%09call%20@chat_out%20%09%09%09%09jmp%20@b%20%09%09%09%09@toggle_off:%20%09%09%09%09%09mov%20toggle,0%20%09%09%09%09%09lea%20edx,off%20%09%09%09%09%09call%20@chat_out%20%09%09%09jmp%20@b%20%09%09%09retn%20%20%09%09;%20Our%20hook%20function.%20%09%09@hook:%20%09%09%09;%20The%20instructions%20that%20we%20replaced%20with%20our%20codecave%20up%20in%20dll%20main.%20%09%09%09add%20edx,edx%20%09%09%09push%20edx%20%20%09%09%09;%20Clear%20out%20edx%20and%20set%20its%20value%20to%20toggle's%20value.%20%09%09%09xor%20edx,edx%20%09%09%09mov%20dl,byte%20ptr%20ds:%5Btoggle%5D%20%09%09%09push%20edx%20%20%09%09%09;%20Jump%20back%20to%20the%20original%20code.%20%09%09%09jmp%20ori_map_draw%20%09%09%09%20%09%09;%20Function%20that%20calls%20WC3's%20internal%20chat%20out%20function%20to%20display%20messages.%20Expects%20%09%09;%20edx%20to%20hold%20the%20address%20of%20the%20text%20you%20want%20displayed.%20%09%09@chat_out:%20%09%09%09push%201fh%20%09%09%09push%200%20%09%09%09push%20edx%20%09%09%09push%200%20%09%09%09mov%20ecx,dword%20ptr%20ds:%5Bori_globalWC3class%5D%20%09%09%09mov%20ecx,dword%20ptr%20ds:%5Becx%5D%20%09%09%09call%20ori_chat_out%20%09%09%09retn%20%09%09%09%20%09end%20main
